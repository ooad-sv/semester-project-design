@startuml


interface Publisher <<interface>> {
    +attachObserver(Observer) : void
    +detachObserver(Observer) : void
    +notify() : void
}

interface Observer <<interface>> {
}

class Person {
    -firstName : String
    -lastName : String
    -email : String
    -hashedPassword : String
    +getFirstName() : String
    +getLastName() : String
    +getEmail() : String
}

class User {
    -comfortableRanges : Double[][]
    -subscribeToStation(Station) : void
    -unsubscribeFromStation(Station) : void
    -updateComfortableRanges(Double[][]) : void
}

class Admin {
    -enableStation(Station) : boolean
    -disableStation(Station) : boolean
}

class Sensor {
    -type : String
    -value : Double
    +getType() : String
    +getValue() : Double
    -updateValue(Double) : void
}

class Station {
    -temperatureSensor : Sensor
    -pressureSensor : Sensor
    -humiditySensor : Sensor
    -altitudeSensor : Sensor
    -observers : Observer[]
    -state : State
    +attachObserver(Observer) : void
    +detachObserver(Observer) : void
    -notifyObservers() : void
    +getState() : State
    +setState() : State
}

interface State <<interface>> {
    +notifyUsers() : void
    +enable() : void
    +disable() : void
}

class EnabledState {
    +notifyUsers() : void
    +enable() : void
    +disable() : void
}

class DisabledState {
    +notifyUsers() : void
    +enable() : void
    +disable() : void
}

User --|> Person
Admin --|> Person

Station o-- Sensor

Publisher <|-- Station
Observer <|--- User

Observer <-o Publisher

Station <-- User
Station <-- Admin

State <|-- EnabledState
State <|-- DisabledState

Station o-> State

@enduml